# Autogenerated by nbdev

d = { 'settings': { 'branch': 'master',
                'doc_baseurl': '/cv_tools',
                'doc_host': 'https://HasanGoni.github.io',
                'git_url': 'https://github.com/HasanGoni/cv_tools',
                'lib_path': 'cv_tools'},
  'syms': { 'cv_tools.compress_and_filter': { 'cv_tools.compress_and_filter.apply_functions': ( 'compress_and_filter_data.html#apply_functions',
                                                                                                'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.binary_to_image': ( 'compress_and_filter_data.html#binary_to_image',
                                                                                                'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.convert_images_to_parquet': ( 'compress_and_filter_data.html#convert_images_to_parquet',
                                                                                                          'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.decode_batch': ( 'compress_and_filter_data.html#decode_batch',
                                                                                             'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.filter_images': ( 'compress_and_filter_data.html#filter_images',
                                                                                              'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.read_images_from_parquet': ( 'compress_and_filter_data.html#read_images_from_parquet',
                                                                                                         'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.save_image': ( 'compress_and_filter_data.html#save_image',
                                                                                           'cv_tools/compress_and_filter.py'),
                                              'cv_tools.compress_and_filter.save_images_to_disk': ( 'compress_and_filter_data.html#save_images_to_disk',
                                                                                                    'cv_tools/compress_and_filter.py')},
            'cv_tools.core': { 'cv_tools.core.Path.filter_': ('core.html#path.filter_', 'cv_tools/core.py'),
                               'cv_tools.core.add_text_to_image': ('core.html#add_text_to_image', 'cv_tools/core.py'),
                               'cv_tools.core.adjust_brightness': ('core.html#adjust_brightness', 'cv_tools/core.py'),
                               'cv_tools.core.bilateral_img_': ('core.html#bilateral_img_', 'cv_tools/core.py'),
                               'cv_tools.core.blur_img_': ('core.html#blur_img_', 'cv_tools/core.py'),
                               'cv_tools.core.canny_img_': ('core.html#canny_img_', 'cv_tools/core.py'),
                               'cv_tools.core.center_crop': ('core.html#center_crop', 'cv_tools/core.py'),
                               'cv_tools.core.concat_images': ('core.html#concat_images', 'cv_tools/core.py'),
                               'cv_tools.core.create_same_shape': ('core.html#create_same_shape', 'cv_tools/core.py'),
                               'cv_tools.core.denoise_img': ('core.html#denoise_img', 'cv_tools/core.py'),
                               'cv_tools.core.filter_img_': ('core.html#filter_img_', 'cv_tools/core.py'),
                               'cv_tools.core.find_contours_binary': ('core.html#find_contours_binary', 'cv_tools/core.py'),
                               'cv_tools.core.find_rotation_angle': ('core.html#find_rotation_angle', 'cv_tools/core.py'),
                               'cv_tools.core.foo': ('core.html#foo', 'cv_tools/core.py'),
                               'cv_tools.core.frm_cntr_to_bbox': ('core.html#frm_cntr_to_bbox', 'cv_tools/core.py'),
                               'cv_tools.core.get_circle_from_single_pin': ('core.html#get_circle_from_single_pin', 'cv_tools/core.py'),
                               'cv_tools.core.get_template_part': ('core.html#get_template_part', 'cv_tools/core.py'),
                               'cv_tools.core.label_mask': ('core.html#label_mask', 'cv_tools/core.py'),
                               'cv_tools.core.median_img_': ('core.html#median_img_', 'cv_tools/core.py'),
                               'cv_tools.core.nlm_filter_': ('core.html#nlm_filter_', 'cv_tools/core.py'),
                               'cv_tools.core.orb_sim_': ('core.html#orb_sim_', 'cv_tools/core.py'),
                               'cv_tools.core.overlay_mask': ('core.html#overlay_mask', 'cv_tools/core.py'),
                               'cv_tools.core.overlay_mask_border_on_image': ('core.html#overlay_mask_border_on_image', 'cv_tools/core.py'),
                               'cv_tools.core.overlay_mask_border_on_image_frm_img': ( 'core.html#overlay_mask_border_on_image_frm_img',
                                                                                       'cv_tools/core.py'),
                               'cv_tools.core.read_config': ('core.html#read_config', 'cv_tools/core.py'),
                               'cv_tools.core.read_img': ('core.html#read_img', 'cv_tools/core.py'),
                               'cv_tools.core.remove_object_from_mask': ('core.html#remove_object_from_mask', 'cv_tools/core.py'),
                               'cv_tools.core.rot_based_on_ref_img': ('core.html#rot_based_on_ref_img', 'cv_tools/core.py'),
                               'cv_tools.core.rotate_image': ('core.html#rotate_image', 'cv_tools/core.py'),
                               'cv_tools.core.seamless_clone': ('core.html#seamless_clone', 'cv_tools/core.py'),
                               'cv_tools.core.sharpen_img_': ('core.html#sharpen_img_', 'cv_tools/core.py'),
                               'cv_tools.core.show_': ('core.html#show_', 'cv_tools/core.py'),
                               'cv_tools.core.show_labeled_mask': ('core.html#show_labeled_mask', 'cv_tools/core.py'),
                               'cv_tools.core.show_poster_from_path': ('core.html#show_poster_from_path', 'cv_tools/core.py'),
                               'cv_tools.core.split_image': ('core.html#split_image', 'cv_tools/core.py'),
                               'cv_tools.core.split_image_with_coordinates': ('core.html#split_image_with_coordinates', 'cv_tools/core.py'),
                               'cv_tools.core.ssim_': ('core.html#ssim_', 'cv_tools/core.py'),
                               'cv_tools.core.tv_filter_': ('core.html#tv_filter_', 'cv_tools/core.py'),
                               'cv_tools.core.write_new_mask': ('core.html#write_new_mask', 'cv_tools/core.py')},
            'cv_tools.create_nb': { 'cv_tools.create_nb._mk_nb': ('nb_create.html#_mk_nb', 'cv_tools/create_nb.py'),
                                    'cv_tools.create_nb.create_nb': ('nb_create.html#create_nb', 'cv_tools/create_nb.py'),
                                    'cv_tools.create_nb.extract_prefix': ('nb_create.html#extract_prefix', 'cv_tools/create_nb.py')},
            'cv_tools.cv_ops': { 'cv_tools.cv_ops.convert_to_rotated_rectangles': ( 'cv_ops.html#convert_to_rotated_rectangles',
                                                                                    'cv_tools/cv_ops.py'),
                                 'cv_tools.cv_ops.fill_holes_in_objects': ('cv_ops.html#fill_holes_in_objects', 'cv_tools/cv_ops.py'),
                                 'cv_tools.cv_ops.multi_otsu': ('cv_ops.html#multi_otsu', 'cv_tools/cv_ops.py'),
                                 'cv_tools.cv_ops.remove_small_objects': ('cv_ops.html#remove_small_objects', 'cv_tools/cv_ops.py')},
            'cv_tools.data_processing.s3_bucket': { 'cv_tools.data_processing.s3_bucket.download_s3_folder': ( 'data_processing.s3_bucket.html#download_s3_folder',
                                                                                                               'cv_tools/data_processing/s3_bucket.py'),
                                                    'cv_tools.data_processing.s3_bucket.get_client': ( 'data_processing.s3_bucket.html#get_client',
                                                                                                       'cv_tools/data_processing/s3_bucket.py'),
                                                    'cv_tools.data_processing.s3_bucket.list_s3_folder_contents': ( 'data_processing.s3_bucket.html#list_s3_folder_contents',
                                                                                                                    'cv_tools/data_processing/s3_bucket.py'),
                                                    'cv_tools.data_processing.s3_bucket.ls_s3': ( 'data_processing.s3_bucket.html#ls_s3',
                                                                                                  'cv_tools/data_processing/s3_bucket.py'),
                                                    'cv_tools.data_processing.s3_bucket.upload_download_s3': ( 'data_processing.s3_bucket.html#upload_download_s3',
                                                                                                               'cv_tools/data_processing/s3_bucket.py'),
                                                    'cv_tools.data_processing.s3_bucket.upload_to_s3': ( 'data_processing.s3_bucket.html#upload_to_s3',
                                                                                                         'cv_tools/data_processing/s3_bucket.py')},
            'cv_tools.dataset_check': { 'cv_tools.dataset_check.display_image_row': ( 'dataset_check.html#display_image_row',
                                                                                      'cv_tools/dataset_check.py')},
            'cv_tools.gif_creation': { 'cv_tools.gif_creation.check_and_install_recorder': ( 'gif_creation.html#check_and_install_recorder',
                                                                                             'cv_tools/gif_creation.py'),
                                       'cv_tools.gif_creation.create_and_show_plot': ( 'gif_creation.html#create_and_show_plot',
                                                                                       'cv_tools/gif_creation.py'),
                                       'cv_tools.gif_creation.record_screen': ( 'gif_creation.html#record_screen',
                                                                                'cv_tools/gif_creation.py'),
                                       'cv_tools.gif_creation.record_with_peek': ( 'gif_creation.html#record_with_peek',
                                                                                   'cv_tools/gif_creation.py'),
                                       'cv_tools.gif_creation.record_with_screentogif': ( 'gif_creation.html#record_with_screentogif',
                                                                                          'cv_tools/gif_creation.py')},
            'cv_tools.imports': {},
            'cv_tools.new_nb_corrected': { 'cv_tools.new_nb_corrected._mk_nb': ('mknb.html#_mk_nb', 'cv_tools/new_nb_corrected.py'),
                                           'cv_tools.new_nb_corrected.check_os': ('mknb.html#check_os', 'cv_tools/new_nb_corrected.py'),
                                           'cv_tools.new_nb_corrected.create_nb': ('mknb.html#create_nb', 'cv_tools/new_nb_corrected.py'),
                                           'cv_tools.new_nb_corrected.extract_prefix': ( 'mknb.html#extract_prefix',
                                                                                         'cv_tools/new_nb_corrected.py'),
                                           'cv_tools.new_nb_corrected.is_jupyterhub': ( 'mknb.html#is_jupyterhub',
                                                                                        'cv_tools/new_nb_corrected.py')},
            'cv_tools.single_pin_training': { 'cv_tools.single_pin_training.CombinedLoss': ( 'single_pin_training.html#combinedloss',
                                                                                             'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.CombinedLoss.__init__': ( 'single_pin_training.html#combinedloss.__init__',
                                                                                                      'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.CombinedLoss.call': ( 'single_pin_training.html#combinedloss.call',
                                                                                                  'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.CombinedLoss.dice_loss': ( 'single_pin_training.html#combinedloss.dice_loss',
                                                                                                       'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.augment_data': ( 'single_pin_training.html#augment_data',
                                                                                             'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.augmentation_': ( 'single_pin_training.html#augmentation_',
                                                                                              'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.conv_block': ( 'single_pin_training.html#conv_block',
                                                                                           'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.create_config_from_args': ( 'single_pin_training.html#create_config_from_args',
                                                                                                        'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.create_dataset': ( 'single_pin_training.html#create_dataset',
                                                                                               'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.create_parser': ( 'single_pin_training.html#create_parser',
                                                                                              'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.decoder_small': ( 'single_pin_training.html#decoder_small',
                                                                                              'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.encoder_decoder_small_block': ( 'single_pin_training.html#encoder_decoder_small_block',
                                                                                                            'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.encoder_small': ( 'single_pin_training.html#encoder_small',
                                                                                              'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.get_model': ( 'single_pin_training.html#get_model',
                                                                                          'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.get_pretrained_model': ( 'single_pin_training.html#get_pretrained_model',
                                                                                                     'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.main': ( 'single_pin_training.html#main',
                                                                                     'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.normalize': ( 'single_pin_training.html#normalize',
                                                                                          'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.pooling': ( 'single_pin_training.html#pooling',
                                                                                        'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.process_': ( 'single_pin_training.html#process_',
                                                                                         'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.process_image_and_mask': ( 'single_pin_training.html#process_image_and_mask',
                                                                                                       'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.read_and_binarize_mask': ( 'single_pin_training.html#read_and_binarize_mask',
                                                                                                       'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.read_normalize_and_resize': ( 'single_pin_training.html#read_normalize_and_resize',
                                                                                                          'cv_tools/single_pin_training.py'),
                                              'cv_tools.single_pin_training.training_model': ( 'single_pin_training.html#training_model',
                                                                                               'cv_tools/single_pin_training.py')}}}
